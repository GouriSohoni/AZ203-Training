function (HTTPTrigger)
run.csx file

#r "Newtonsoft.Json"

using System.Net;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Primitives;
using Newtonsoft.Json;
using Azure.Storage.Blobs;
using Azure.Storage.Blobs.Models;

public static async Task<IActionResult> Run(HttpRequest req, ILogger log)
{
    log.LogInformation("C# HTTP trigger function processed a request.");

    string name = "Gouri";
    string connectionString = "DefaultEndpointsProtocol=https;AccountName=mystorageaccfiledata;AccountKey=kiNOYd8fwcNtuoan2d+9mR1h+mF3dQkwdIuNfwDTg5GaKWvn6EhgHZs4R98nKys7LzMJdJUwMytiTW7jtBZLlg==;EndpointSuffix=core.windows.net";

    // Create a BlobServiceClient object which will be used to create a container client
    BlobServiceClient blobServiceClient = new BlobServiceClient(connectionString);

    //Create a unique name for the container
    string containerName = "drops2" ; 

    // Create the container and return a container client object
    //BlobContainerClient containerClient = await blobServiceClient.CreateBlobContainerAsync(containerName);
     BlobContainerClient containerClient =  blobServiceClient.GetBlobContainerClient(containerName);
    
    string localPath = "d:/local/temp";
    string fileName = "quickstart"  + ".txt";
    string localFilePath = Path.Combine(localPath, fileName);

    // Write text to the file
    try
    {
        await File.AppendAllTextAsync(localFilePath, "Hello, World again!\n\t");
    }
    catch (Exception ex)
    {
        log.LogInformation(ex.Message);
    }
    // Get a reference to a blob
    BlobClient blobClient = containerClient.GetBlobClient(fileName);

    Console.WriteLine("Uploading to Blob storage as blob:\n\t {0}\n", blobClient.Uri);

    // Open the file and upload its data
    FileStream uploadFileStream = File.OpenRead(localFilePath);
    await blobClient.UploadAsync(uploadFileStream, true);
    uploadFileStream.Close();


    string requestBody = await new StreamReader(req.Body).ReadToEndAsync();
    dynamic data = JsonConvert.DeserializeObject(requestBody);
    
    string responseMessage = string.IsNullOrEmpty(name)
        ? "This HTTP triggered function executed successfully. Pass a name in the query string or in the request body for a personalized response."
                : $"Hello, {name}. This HTTP triggered function executed successfully.";

            return new OkObjectResult(responseMessage);
}


function.proj file
<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <TargetFramework>netstandard2.0</TargetFramework>
    </PropertyGroup>
    <ItemGroup>
        <PackageReference Include="Azure.Core" Version="1.3.0" />
	<PackageReference Include="Azure.Storage.Common" Version="12.4.3" />
<PackageReference Include="Azure.Storage.Blobs" Version="12.4.4" />
    </ItemGroup>
</Project>

2 configuration level app settings
name: DOTNET_ADD_GLOBAL_TOOLS_TO_PATH Value: false
name: DOTNET_SKIP_FIRST_TIME_EXPERIENCE Vaue:true